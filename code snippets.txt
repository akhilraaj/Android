Url Building

    Uri builtUri=Uri.parse(FORECAST_BASE_URL).buildUpon()
        		   .appendQueryParameter(QUERY_PARAM , params[0])
        		   .appendQueryParameter(FORMAT_PARAM , format)
        		   .appendQueryParameter(UNITS_PARAM , units)
        		   .appendQueryParameter(DAYS_PARAM , Integer.toString(numDays))
        		   .appendQueryParameter(APP_ID, appId)
        		   .build();
        		   
           
        	URL url = new URL(builtUri.toString());
       

Reading JSON data from URL
	
	    urlConnection =  (HttpURLConnection) url.openConnection();
            urlConnection.setRequestMethod("GET");
            urlConnection.setDoInput(true);  //changed from the actual code actul code had a end of input stream error
            urlConnection.setDoOutput(true);
            urlConnection.connect();

            // Read the input stream into a String
            InputStream inputStream = urlConnection.getInputStream();


            StringBuffer buffer = new StringBuffer();
            if (inputStream == null) {
                // Nothing to do.
                return null;
            }
            reader = new BufferedReader(new InputStreamReader(inputStream));

            String line;
            while ((line = reader.readLine()) != null) {
                // Since it's JSON, adding a newline isn't necessary (it won't affect parsing)
                // But it does make debugging a *lot* easier if you print out the completed
                // buffer for debugging.
                buffer.append(line + "\n");
            }


Creating a list view
		
		
	
	 	 String[] forecastArray={"akhilraj= coder",
				  "sunday= rainy day","monday= cloudy","tuesday = rainy afgaun"};
		  List<String>	weekForecast=new ArrayList<String>(Arrays.asList( forecastArray));
		 ArrayAdapter<String> mForecastAdapter= new   ArrayAdapter<String>(getActivity(),R.layout.list_item_forecast,
				R.id.list_item_forecast_textview,weekForecast
				);
		ListView listView=(ListView)rootView.findViewById(R.id.listview_forecast);
		listView.setAdapter(mForecastAdapter);

Toast

	Toast.makeText(getActivity(), forecast, Toast.LENGTH_LONG).show();

list itemclick listener

	listView.setOnItemClickListener(new AdapterView.OnItemClickListener()
		 {
		 //@Override
		 public void onItemClick(AdapterView<?> parent, View view,
		 int position, long id) 
		 {
		 String forecast=mForecastAdapter.getItem(position);
		 }
		});

Starting an intent

		Intent detailsIntent=new Intent(getActivity(),DetailAcivity.class).putExtra(Intent.EXTRA_TEXT, forecast);
		 startActivity(detailsIntent);

setting text in text view

		((TextView )rootView.findViewById(R.id.detail_text)).setText('text');